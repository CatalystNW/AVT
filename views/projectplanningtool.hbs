<link href="//cdnjs.cloudflare.com/ajax/libs/x-editable/1.5.0/bootstrap3-editable/css/bootstrap-editable.css" rel="stylesheet"/>
<script src="//cdnjs.cloudflare.com/ajax/libs/x-editable/1.5.0/bootstrap3-editable/js/bootstrap-editable.min.js"></script>
<script src="/javascript/xedit.js" type="text/javascript"></script>

<style>
 button.btn.btn-primary.btn-sm.editable-submit {
   width: 35px;
   height: 35px;
 }

 button.btn.btn-primary.btn-sm.editable-submit:after {
   content:  "\2713 ";
   font-size: 24px;
 }

 button.btn.btn-default.btn-sm.editable-cancel {
   width: 35px;
   height: 35px;
 }
 button.btn.btn-default.btn-sm.editable-cancel:after {
   content:  "\2190 ";
   font-size: 24px;
 }

 .assessment-checklist fieldset {
   padding: 1em;
   border: 1px solid rgba(0, 0, 0, 0.125);
   border-radius: 4px;
   display: inline-block;
 }
 .assessment-checklist legend {
   border: 1px solid rgba(0, 0, 0, 0.125);
   border-radius: 4px;
   padding: 0.5em;
 }
 .assessment-checklist li {
   list-style-type: none;
   margin-bottom: 2em;
 }
 .assessment-checklist li.checklist-item label {
   padding: 0.5em;
 }
 .assessment-checklist li label input:checked + span {
   font-weight: bold;
 }
 .assessment-checklist textarea {
   width: 22em;
   height: 10em;
 }
</style>


<div class="row">
  <div class="col-sm-12">
    <h5>Project Planning</h5>

    {{#each results.doc}}
      <div class="row">
        <div class="col-xs-12">
          <h1 style="display:inline-block;">{{application.name.first}} {{application.name.middle}} {{application.name.last}}</h1>
          <h3 style="float:right;display:inline-block;" class="text-muted">#{{app_name}}</h4>
        </div>
      </div>
      <h5>Status: <a href="#" id="status" data-type="select" data-pk="{{_id}}" data-url="/edit/{{_id}}" data-name="status" data-title="Select status"></a></h5>
    {{/each}}

    <ul class="nav nav-tabs" role="tablist">
      <li class="nav-item">
        <a class="nav-link active" data-toggle="tab" href="#office" role="tab">Office</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" data-toggle="tab" href="#crew-chief" role="tab"> Cre Chief</a>
      </li>
      
    </ul>

    <!-- Tab panes -->
    <div class="tab-content">

      <!-- Assessment Checklist -->
      <div class="tab-pane" id="office" role="tabpanel">
        <form>         
          <ul class="assessment-checklist">
            <br />
            <li class="checklist-item timed-item" data-time="28">
              <fieldset>
                <legend>Leadership Team Assigned</legend>
                <p><input type="checkbox" class="checkbox checkbox-inline" name="leadership_assigned" value="false"></p>                
              </fieldset>
            </li>
            <li class="checklist-item timed-item" data-time="28">
              <fieldset>
                <legend>Project Date Scheduled</legend>
                <p><input type="checkbox" class="checkbox checkbox-inline" name="date_scheduled" value="false"></p>                
              </fieldset>
            </li>
            <li class="checklist-item timed-item" data-time="28">
              <fieldset>
                <legend>Contract Created and Emailed</legend>
                <p><input type="checkbox" class="checkbox checkbox-inline" name="contract_emailed" value="false"></p>                
              </fieldset>
            </li>
            <li class="checklist-item timed-item" data-time="28">
              <fieldset>
                <legend>Client Called</legend>
                <p><input type="checkbox" class="checkbox checkbox-inline" name="client_called" value="false"></p>                
              </fieldset>
            </li>
            <li class="checklist-item timed-item" data-time="28">
              <fieldset>
                <legend>Planning Visit</legend>
                <p><input type="checkbox" class="checkbox checkbox-inline" name="planning_visit" value="false"></p>                
              </fieldset>
            </li>
            <li class="checklist-item timed-item" data-time="28">
              <fieldset>
                <legend>Porta John</legend>
                <p><input type="checkbox" class="checkbox checkbox-inline" name="porta_john" value="false"></p>                
              </fieldset>
            </li>

            
            
          </ul>
          
        </form>  
      </div><!-- end #checklist -->
      
    </div>

  </div>
</div>

<script>
 var planning = {{{ stringify results.planning }}}
   window.planning = planning;

 var workItems = {{{stringify results.work}}}
   var docs = {{{stringify results.doc}}}


     $(document).ready(function() {
      

      

       // Assessment Checklist autosaving
       $('.assessment-checklist input[type="radio"], .assessment-checklist input[type="checkbox"], ' +
         '.assessment-checklist input[type="date"], .assessment-checklist input[type="number"]')
         .change(savePlanningDocument);
       $('.assessment-checklist input[type="text"], .assessment-checklist textarea')
         .blur(savePlanningDocument);
     })

 

 // Used with $(*).each
 function watchEditButton(idx) {
   $(this).on('click', showWorkItemEditForm)
 }

 function showWorkItemEditForm(e) {
   e.preventDefault()
   var workItemParent = this.parentElement
   var workItemContainer = $(workItemParent)
   var workItemId = $(workItemParent.parentElement).attr('name')

   var currentData = {}
   $('[name*="' + workItemId + '"]', workItemContainer).each(function(idx) {
     var path = $(this).attr('name').replace(workItemId + '.', '')
     currentData[path] = this.innerText
   })

   workItemContainer.empty()

   var fields = [
     {field: 'name', text:'Name'},
     {field: 'description', text: 'Description', type: 'textarea'},
     {field: 'siteComments', text: 'Site Comments', type: 'textarea'},
     {field: 'cost', text: 'Cost'},
   ]

   fields.forEach(function(f) {
     var formGroup = $('<div class="form-group"></div>')
     $('<label>' + f.text + '</label>').appendTo(formGroup)
     if (f.type && f.type === 'textarea') {
       $('<textarea></textarea>')
         .addClass('form-control')
         .attr('name', workItemId + '.' + f.field)
         .attr('rows', 5)
         .val(currentData[f.field])
         .appendTo(formGroup)
     } else {
       $('<input></input>')
         .addClass('form-control')
         .attr('name', workItemId + '.' + f.field)
         .val(currentData[f.field])
         .appendTo(formGroup)
     }

     workItemContainer.append(formGroup)
   })

   $('<button></button>')
         .text('Save')
         .addClass('btn').addClass('btn-primary')
         .addClass('card-link')
         .on('click', function(e) {
           saveWorkItem(workItemContainer)
         })
         .appendTo(workItemContainer)

   $('<button></button>')
         .text('Cancel')
         .addClass('btn').addClass('btn-danger')
         .addClass('card-link')
         .on('click', function(e) {
           for (let i=0; i<workItems.length; i++) {
             if (workItems[i]._id === workItemId) {
               showWorkItem(workItems[i], workItemContainer)
             }
           }
         })
         .appendTo(workItemContainer)
 }

 function showWorkItem(data, node) {
   node.empty()

   var cardBlock = node

   $('<h4></h4>').addClass('card-title')
                 .attr('name', data._id + '.name')
                 .text(data.name)
                 .appendTo(cardBlock)

   $('<p></p>').addClass('text-muted')
                 .text(new Date(data.date).toString())
                 .appendTo(cardBlock)

   var cardText = $('<p></p>').addClass('card-text')
                              .appendTo(cardBlock)

   $('<strong>Description:</strong>').appendTo(cardText)
   $('<br></br>').appendTo(cardText)

   $('<span></span>')
                              .attr('name', data._id + '.description')
                              .text(data.description)
                              .appendTo(cardText)

   $('<br></br>').appendTo(cardText)
   $('<br></br>').appendTo(cardText)

   $('<strong>Vetting Comments:</strong>').appendTo(cardText)
   // $('<br></br>').appendTo(cardText)

   $('<p></p>').text(data.vettingComments).appendTo(cardText)
   $('<br></br>').appendTo(cardText)

   $('<strong>Site Comments:</strong>').appendTo(cardText)
   $('<br></br>').appendTo(cardText)

   $('<p></p>').attr('name', data._id + '.siteComments')
                              .text(data.siteComments).appendTo(cardText)
   $('<br></br>').appendTo(cardText)

   
   $('<p></p>').attr('name', data._id + '.projectComments')
                              .text(data.projectComments).appendTo(cardText)
   $('<br></br>').appendTo(cardText)

   $('<strong>Cost:</strong>').appendTo(cardText)
   $('<br></br>').appendTo(cardText)

   $('<span></span>')
                              .attr('name', data._id + '.cost')
                              .text(data.cost)
                              .appendTo(cardText)

   $('<a></a>').addClass('btn').addClass('btn-primary')
                              .addClass('card-link').addClass('work-item-edit')
                              .text('Edit')
                              .attr('href', '#')
                              .on('click', showWorkItemEditForm)
                              .appendTo(cardBlock)
 }

 function saveWorkItem(node) {
   var data = {}, id = false
   $('input, textarea', node).each(function(idx) {
     var path = this.name.split('.')[1]
     data[path] = this.value
     if (!id) id = this.name.split('.')[0]
   })

   // XHR here
   var xhrData = JSON.parse(JSON.stringify(data))
   xhrData.id = id

   xhr(xhrData, 'POST', '/site/updateitem', function(err) {
     if (err) {
       // TODO: If error, flip the value back and show an error message to the user
       // alert('Value did not save, please reload the page')
     }

     for (var i=0; i<workItems.length; i++) {
       if (workItems[i]._id === id) {
         Object.keys(data).forEach(function(k) {
           workItems[i][k] = data[k]
         })

         showWorkItem(workItems[i], node)
       }
     }
   })






 }

 function xhr(data, method, url, next) {
   //post to database

   var posting = $.ajax({
     type : method,
     url : url,
     dataType : 'json',
     contentType : 'application/json; charset=UTF-8',
     data : JSON.stringify(data)
   });

   //check for error
   posting.done(function (xhr) {
     if(xhr.status === 'success' || xhr.status === 200 || xhr.status ==='200') {
       next(null, xhr)
     } else {
       next(new Error('Could not complete xhr'))
     }
   });

   posting.fail(function (res) {
     next(new Error('Could not complete xhr'))
   });
 }

 function handleNewWorkItemSubmission(e) {
   var newWorkItem = {}, error = false

   $('input, textarea', e.target.parentNode).each(function(idx) {
     if (this.value.length === 0 && this.name !== 'cost') {
       $(this.parentNode).addClass('has-danger')
       error = true
     } else {
       newWorkItem[this.name] = this.value
       $(this.parentNode).removeClass('has-danger')
     }
   })

   if (error === false) {
     createNewWorkItem(newWorkItem, function(err) {
       handleNewWorkItemClear()
     })
   }
 }

 function handleNewWorkItemClear(e, node) {
   $('input, textarea', (e ? e.target.parentNode : node)).each(function(idx) {
     $(this).val('')
     $(this.parentNode).removeClass('has-danger')
   })
 }

 function createNewWorkItem(w, next) {
   var id = docs[0]._id
   var rightNow = new Date()

   w.date = rightNow
   w.updated = rightNow
   w.applicationId = id

   xhr(w, 'POST', '/site/additem', function(err, data) {
     // TODO: Handle error
     if (err) { alert('There was an error saving your work item') }

     w._id = data.itemId
     workItems.push(w)
     var newNode = addWorkItem(w)
     handleNewWorkItemClear(null, $('[name="new"]'))

   })
 }

 function addWorkItem(w) {
   var cardContainer = $('#workItemCards')

   var cardDiv = $('<div></div>').addClass('col-xs-12').addClass('col-sm-6')
                                 .appendTo(cardContainer)

   var card = $('<div></div>').addClass('card').addClass('work-item')
                              .attr('name', w._id)
                              .appendTo(cardDiv)

   var cardBlock = $('<div></div>').addClass('card-block')
                                   .appendTo(card)


   $('<h4></h4>').addClass('card-title')
                                   .attr('name', w._id + '.name')
                                   .text(w.name)
                                   .appendTo(cardBlock)

   $('<p></p>').addClass('text-muted')
                                   .text(w.date.toString())
                                   .appendTo(cardBlock)

   var cardText = $('<p></p>').addClass('card-text')
                              .appendTo(cardBlock)

   $('<strong>Description:</strong>').appendTo(cardText)
   $('<br></br>').appendTo(cardText)

   $('<span></span>')
                              .attr('name', w._id + '.description')
                              .text(w.description)
                              .appendTo(cardText)

   $('<br></br>').appendTo(cardText)
   $('<br></br>').appendTo(cardText)

   $('<strong>Vetting Comments:</strong>').appendTo(cardText)
   // $('<br></br>').appendTo(cardText)

   $('<p></p>').text(w.vettingComments).appendTo(cardText)
   $('<br></br>').appendTo(cardText)

   $('<strong>Site Comments:</strong>').appendTo(cardText)
   // $('<br></br>').appendTo(cardText)

   $('<p></p>').text(w.siteComments).appendTo(cardText)
   $('<br></br>').appendTo(cardText)

   $('<strong>Cost:</strong>').appendTo(cardText)
   $('<br></br>').appendTo(cardText)

   $('<span></span>')
                              .attr('name', w._id + '.cost')
                              .text(w.cost)
                              .appendTo(cardText)

   $('<a></a>').addClass('btn').addClass('btn-primary')
                              .addClass('card-link').addClass('work-item-edit')
                              .text('Edit')
                              .attr('href', '#')
                              .on('click', showWorkItemEditForm)
                              .appendTo(cardBlock)

   return cardBlock
 }

 function savePlanningDocument() {
   // Gather all of the details for the assessment.
 }


</script>
